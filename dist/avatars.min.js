(function(U,$){typeof exports=="object"&&typeof module!="undefined"?module.exports=$(require("three")):typeof define=="function"&&define.amd?define(["three"],$):(U=typeof globalThis!="undefined"?globalThis:U||self,U.Avatars=$(U.THREE))})(this,function(U){"use strict";function $(r){if(r&&r.__esModule)return r;var e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});return r&&Object.keys(r).forEach(function(n){if(n!=="default"){var i=Object.getOwnPropertyDescriptor(r,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return r[n]}})}}),e.default=r,Object.freeze(e)}var t=$(U);/*! (c) 2019-2021 pixiv Inc. - https://github.com/pixiv/three-vrm/blob/release/LICENSE *//*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */function q(r,e,n,i){return new(n||(n=Promise))(function(a,s){function o(c){try{d(i.next(c))}catch(u){s(u)}}function l(c){try{d(i.throw(c))}catch(u){s(u)}}function d(c){var u;c.done?a(c.value):(u=c.value,u instanceof n?u:new n(function(m){m(u)})).then(o,l)}d((i=i.apply(r,e||[])).next())})}var M0;(function(r){r[r.NUMBER=0]="NUMBER",r[r.VECTOR2=1]="VECTOR2",r[r.VECTOR3=2]="VECTOR3",r[r.VECTOR4=3]="VECTOR4",r[r.COLOR=4]="COLOR"})(M0||(M0={})),new t.Vector2,new t.Vector3,new t.Vector4,new t.Color;var L0;(function(r){var e,n,i,a,s,o;(e=r.BlendShapePresetName||(r.BlendShapePresetName={})).A="a",e.Angry="angry",e.Blink="blink",e.BlinkL="blink_l",e.BlinkR="blink_r",e.E="e",e.Fun="fun",e.I="i",e.Joy="joy",e.Lookdown="lookdown",e.Lookleft="lookleft",e.Lookright="lookright",e.Lookup="lookup",e.Neutral="neutral",e.O="o",e.Sorrow="sorrow",e.U="u",e.Unknown="unknown",(n=r.FirstPersonLookAtTypeName||(r.FirstPersonLookAtTypeName={})).BlendShape="BlendShape",n.Bone="Bone",(i=r.HumanoidBoneName||(r.HumanoidBoneName={})).Chest="chest",i.Head="head",i.Hips="hips",i.Jaw="jaw",i.LeftEye="leftEye",i.LeftFoot="leftFoot",i.LeftHand="leftHand",i.LeftIndexDistal="leftIndexDistal",i.LeftIndexIntermediate="leftIndexIntermediate",i.LeftIndexProximal="leftIndexProximal",i.LeftLittleDistal="leftLittleDistal",i.LeftLittleIntermediate="leftLittleIntermediate",i.LeftLittleProximal="leftLittleProximal",i.LeftLowerArm="leftLowerArm",i.LeftLowerLeg="leftLowerLeg",i.LeftMiddleDistal="leftMiddleDistal",i.LeftMiddleIntermediate="leftMiddleIntermediate",i.LeftMiddleProximal="leftMiddleProximal",i.LeftRingDistal="leftRingDistal",i.LeftRingIntermediate="leftRingIntermediate",i.LeftRingProximal="leftRingProximal",i.LeftShoulder="leftShoulder",i.LeftThumbDistal="leftThumbDistal",i.LeftThumbIntermediate="leftThumbIntermediate",i.LeftThumbProximal="leftThumbProximal",i.LeftToes="leftToes",i.LeftUpperArm="leftUpperArm",i.LeftUpperLeg="leftUpperLeg",i.Neck="neck",i.RightEye="rightEye",i.RightFoot="rightFoot",i.RightHand="rightHand",i.RightIndexDistal="rightIndexDistal",i.RightIndexIntermediate="rightIndexIntermediate",i.RightIndexProximal="rightIndexProximal",i.RightLittleDistal="rightLittleDistal",i.RightLittleIntermediate="rightLittleIntermediate",i.RightLittleProximal="rightLittleProximal",i.RightLowerArm="rightLowerArm",i.RightLowerLeg="rightLowerLeg",i.RightMiddleDistal="rightMiddleDistal",i.RightMiddleIntermediate="rightMiddleIntermediate",i.RightMiddleProximal="rightMiddleProximal",i.RightRingDistal="rightRingDistal",i.RightRingIntermediate="rightRingIntermediate",i.RightRingProximal="rightRingProximal",i.RightShoulder="rightShoulder",i.RightThumbDistal="rightThumbDistal",i.RightThumbIntermediate="rightThumbIntermediate",i.RightThumbProximal="rightThumbProximal",i.RightToes="rightToes",i.RightUpperArm="rightUpperArm",i.RightUpperLeg="rightUpperLeg",i.Spine="spine",i.UpperChest="upperChest",(a=r.MetaAllowedUserName||(r.MetaAllowedUserName={})).Everyone="Everyone",a.ExplicitlyLicensedPerson="ExplicitlyLicensedPerson",a.OnlyAuthor="OnlyAuthor",(s=r.MetaUssageName||(r.MetaUssageName={})).Allow="Allow",s.Disallow="Disallow",(o=r.MetaLicenseName||(r.MetaLicenseName={})).Cc0="CC0",o.CcBy="CC_BY",o.CcByNc="CC_BY_NC",o.CcByNcNd="CC_BY_NC_ND",o.CcByNcSa="CC_BY_NC_SA",o.CcByNd="CC_BY_ND",o.CcBySa="CC_BY_SA",o.Other="Other",o.RedistributionProhibited="Redistribution_Prohibited"})(L0||(L0={}));const Ae=new t.Vector3,Pe=new t.Vector3;function d0(r,e){return r.matrixWorld.decompose(Ae,e,Pe),e}new t.Quaternion,Object.freeze(new t.Vector3(0,0,-1)),new t.Quaternion;var x0;(function(r){r[r.Auto=0]="Auto",r[r.Both=1]="Both",r[r.ThirdPersonOnly=2]="ThirdPersonOnly",r[r.FirstPersonOnly=3]="FirstPersonOnly"})(x0||(x0={}));function ve(r){return r.invert?r.invert():r.inverse(),r}new t.Vector3,new t.Quaternion;const Re=Object.freeze(new t.Vector3(0,0,-1)),Te=new t.Vector3,Fe=new t.Vector3,be=new t.Vector3,A0=new t.Quaternion;class i0{constructor(e,n){this.autoUpdate=!0,this._euler=new t.Euler(0,0,0,i0.EULER_ORDER),this.firstPerson=e,this.applyer=n}getLookAtWorldDirection(e){const n=d0(this.firstPerson.firstPersonBone,A0);return e.copy(Re).applyEuler(this._euler).applyQuaternion(n)}lookAt(e){this._calcEuler(this._euler,e),this.applyer&&this.applyer.lookAt(this._euler)}update(e){this.target&&this.autoUpdate&&(this.lookAt(this.target.getWorldPosition(Te)),this.applyer&&this.applyer.lookAt(this._euler))}_calcEuler(e,n){const i=this.firstPerson.getFirstPersonWorldPosition(Fe),a=be.copy(n).sub(i).normalize();return a.applyQuaternion(ve(d0(this.firstPerson.firstPersonBone,A0))),e.x=Math.atan2(a.y,Math.sqrt(a.x*a.x+a.z*a.z)),e.y=Math.atan2(-a.x,-a.z),e}}i0.EULER_ORDER="YXZ",new t.Euler(0,0,0,i0.EULER_ORDER);var P0,v0,R0,T0,F0;(function(r){r[r.Off=0]="Off",r[r.Front=1]="Front",r[r.Back=2]="Back"})(P0||(P0={})),function(r){r[r.None=0]="None",r[r.Normal=1]="Normal",r[r.LitShadeRate=2]="LitShadeRate",r[r.UV=3]="UV"}(v0||(v0={})),function(r){r[r.FixedColor=0]="FixedColor",r[r.MixedLighting=1]="MixedLighting"}(R0||(R0={})),function(r){r[r.None=0]="None",r[r.WorldCoordinates=1]="WorldCoordinates",r[r.ScreenCoordinates=2]="ScreenCoordinates"}(T0||(T0={})),function(r){r[r.Opaque=0]="Opaque",r[r.Cutout=1]="Cutout",r[r.Transparent=2]="Transparent",r[r.TransparentWithZWrite=3]="TransparentWithZWrite"}(F0||(F0={}));var b0;(function(r){r[r.Opaque=0]="Opaque",r[r.Cutout=1]="Cutout",r[r.Transparent=2]="Transparent",r[r.TransparentWithZWrite=3]="TransparentWithZWrite"})(b0||(b0={}));const ke=new t.Matrix4;function k0(r){return r.invert?r.invert():r.getInverse(ke.copy(r)),r}class Ve{constructor(e){this._inverseCache=new t.Matrix4,this._shouldUpdateInverse=!0,this.matrix=e;const n={set:(i,a,s)=>(this._shouldUpdateInverse=!0,i[a]=s,!0)};this._originalElements=e.elements,e.elements=new Proxy(e.elements,n)}get inverse(){return this._shouldUpdateInverse&&(k0(this._inverseCache.copy(this.matrix)),this._shouldUpdateInverse=!1),this._inverseCache}revert(){this.matrix.elements=this._originalElements}}const We=Object.freeze(new t.Matrix4),Se=Object.freeze(new t.Quaternion),z=new t.Vector3,V0=new t.Vector3,He=new t.Vector3,Ie=new t.Quaternion,M=new t.Matrix4,n0=new t.Matrix4;class Qe{constructor(e,n={}){var i,a,s,o,l,d;if(this._currentTail=new t.Vector3,this._prevTail=new t.Vector3,this._nextTail=new t.Vector3,this._boneAxis=new t.Vector3,this._centerSpacePosition=new t.Vector3,this._center=null,this._parentWorldRotation=new t.Quaternion,this._initialLocalMatrix=new t.Matrix4,this._initialLocalRotation=new t.Quaternion,this._initialLocalChildPosition=new t.Vector3,this.bone=e,this.bone.matrixAutoUpdate=!1,this.radius=(i=n.radius)!==null&&i!==void 0?i:.02,this.stiffnessForce=(a=n.stiffnessForce)!==null&&a!==void 0?a:1,this.gravityDir=n.gravityDir?new t.Vector3().copy(n.gravityDir):new t.Vector3().set(0,-1,0),this.gravityPower=(s=n.gravityPower)!==null&&s!==void 0?s:0,this.dragForce=(o=n.dragForce)!==null&&o!==void 0?o:.4,this.colliders=(l=n.colliders)!==null&&l!==void 0?l:[],this._centerSpacePosition.setFromMatrixPosition(this.bone.matrixWorld),this._initialLocalMatrix.copy(this.bone.matrix),this._initialLocalRotation.copy(this.bone.quaternion),this.bone.children.length===0)this._initialLocalChildPosition.copy(this.bone.position).normalize().multiplyScalar(.07);else{const c=this.bone.children[0];this._initialLocalChildPosition.copy(c.position)}this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)),this._prevTail.copy(this._currentTail),this._nextTail.copy(this._currentTail),this._boneAxis.copy(this._initialLocalChildPosition).normalize(),this._centerSpaceBoneLength=z.copy(this._initialLocalChildPosition).applyMatrix4(this.bone.matrixWorld).sub(this._centerSpacePosition).length(),this.center=(d=n.center)!==null&&d!==void 0?d:null}get center(){return this._center}set center(e){var n;this._getMatrixCenterToWorld(M),this._currentTail.applyMatrix4(M),this._prevTail.applyMatrix4(M),this._nextTail.applyMatrix4(M),!((n=this._center)===null||n===void 0)&&n.userData.inverseCacheProxy&&(this._center.userData.inverseCacheProxy.revert(),delete this._center.userData.inverseCacheProxy),this._center=e,this._center&&(this._center.userData.inverseCacheProxy||(this._center.userData.inverseCacheProxy=new Ve(this._center.matrixWorld))),this._getMatrixWorldToCenter(M),this._currentTail.applyMatrix4(M),this._prevTail.applyMatrix4(M),this._nextTail.applyMatrix4(M),M.multiply(this.bone.matrixWorld),this._centerSpacePosition.setFromMatrixPosition(M),this._centerSpaceBoneLength=z.copy(this._initialLocalChildPosition).applyMatrix4(M).sub(this._centerSpacePosition).length()}reset(){this.bone.quaternion.copy(this._initialLocalRotation),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix),this._centerSpacePosition.setFromMatrixPosition(this.bone.matrixWorld),this.bone.localToWorld(this._currentTail.copy(this._initialLocalChildPosition)),this._prevTail.copy(this._currentTail),this._nextTail.copy(this._currentTail)}update(e){if(e<=0)return;this.bone.parent?d0(this.bone.parent,this._parentWorldRotation):this._parentWorldRotation.copy(Se),this._getMatrixWorldToCenter(M),M.multiply(this.bone.matrixWorld),this._centerSpacePosition.setFromMatrixPosition(M),this._getMatrixWorldToCenter(n0),n0.multiply(this._getParentMatrixWorld());const n=this.stiffnessForce*e,i=V0.copy(this.gravityDir).multiplyScalar(this.gravityPower*e);this._nextTail.copy(this._currentTail).add(z.copy(this._currentTail).sub(this._prevTail).multiplyScalar(1-this.dragForce)).add(z.copy(this._boneAxis).applyMatrix4(this._initialLocalMatrix).applyMatrix4(n0).sub(this._centerSpacePosition).normalize().multiplyScalar(n)).add(i),this._nextTail.sub(this._centerSpacePosition).normalize().multiplyScalar(this._centerSpaceBoneLength).add(this._centerSpacePosition),this._collision(this._nextTail),this._prevTail.copy(this._currentTail),this._currentTail.copy(this._nextTail);const a=k0(M.copy(n0.multiply(this._initialLocalMatrix))),s=Ie.setFromUnitVectors(this._boneAxis,z.copy(this._nextTail).applyMatrix4(a).normalize());this.bone.quaternion.copy(this._initialLocalRotation).multiply(s),this.bone.updateMatrix(),this.bone.matrixWorld.multiplyMatrices(this._getParentMatrixWorld(),this.bone.matrix)}_collision(e){this.colliders.forEach(n=>{this._getMatrixWorldToCenter(M),M.multiply(n.matrixWorld);const i=z.setFromMatrixPosition(M),a=n.geometry.boundingSphere.radius,s=this.radius+a;if(e.distanceToSquared(i)<=s*s){const o=V0.subVectors(e,i).normalize(),l=He.addVectors(i,o.multiplyScalar(s));e.copy(l.sub(this._centerSpacePosition).normalize().multiplyScalar(this._centerSpaceBoneLength).add(this._centerSpacePosition))}})}_getMatrixCenterToWorld(e){return this._center?e.copy(this._center.matrixWorld):e.identity(),e}_getMatrixWorldToCenter(e){return this._center?e.copy(this._center.userData.inverseCacheProxy.inverse):e.identity(),e}_getParentMatrixWorld(){return this.bone.parent?this.bone.parent.matrixWorld:We}}class Be{constructor(e,n){this.colliderGroups=[],this.springBoneGroupList=[],this.colliderGroups=e,this.springBoneGroupList=n}setCenter(e){this.springBoneGroupList.forEach(n=>{n.forEach(i=>{i.center=e})})}lateUpdate(e){const n=new Set;this.springBoneGroupList.forEach(i=>{i.forEach(a=>{this._updateWorldMatrix(n,a.bone),a.update(e)})})}reset(){const e=new Set;this.springBoneGroupList.forEach(n=>{n.forEach(i=>{this._updateWorldMatrix(e,i.bone),i.reset()})})}_updateWorldMatrix(e,n){e.has(n)||(n.parent&&this._updateWorldMatrix(e,n.parent),n.updateWorldMatrix(!1,!1),e.add(n))}}const De=new t.Vector3,Ee=new t.MeshBasicMaterial({visible:!1});class Ce{import(e){var n;return q(this,void 0,void 0,function*(){const i=(n=e.parser.json.extensions)===null||n===void 0?void 0:n.VRM;if(!i)return null;const a=i.secondaryAnimation;if(!a)return null;const s=yield this._importColliderMeshGroups(e,a),o=yield this._importSpringBoneGroupList(e,a,s);return new Be(s,o)})}_createSpringBone(e,n={}){return new Qe(e,n)}_importSpringBoneGroupList(e,n,i){return q(this,void 0,void 0,function*(){const a=n.boneGroups||[],s=[];return yield Promise.all(a.map(o=>q(this,void 0,void 0,function*(){if(o.stiffiness===void 0||o.gravityDir===void 0||o.gravityDir.x===void 0||o.gravityDir.y===void 0||o.gravityDir.z===void 0||o.gravityPower===void 0||o.dragForce===void 0||o.hitRadius===void 0||o.colliderGroups===void 0||o.bones===void 0||o.center===void 0)return;const l=o.stiffiness,d=new t.Vector3(o.gravityDir.x,o.gravityDir.y,-o.gravityDir.z),c=o.gravityPower,u=o.dragForce,m=o.hitRadius,v=[];o.colliderGroups.forEach(x=>{v.push(...i[x].colliders)});const f=[];yield Promise.all(o.bones.map(x=>q(this,void 0,void 0,function*(){const _=yield e.parser.getDependency("node",x),R=o.center!==-1?yield e.parser.getDependency("node",o.center):null;_&&_.traverse(O=>{const H=this._createSpringBone(O,{radius:m,stiffnessForce:l,gravityDir:d,gravityPower:c,dragForce:u,colliders:v,center:R});f.push(H)})}))),s.push(f)}))),s})}_importColliderMeshGroups(e,n){return q(this,void 0,void 0,function*(){const i=n.colliderGroups;if(i===void 0)return[];const a=[];return i.forEach(s=>q(this,void 0,void 0,function*(){if(s.node===void 0||s.colliders===void 0)return;const o=yield e.parser.getDependency("node",s.node),l=[];s.colliders.forEach(c=>{if(c.offset===void 0||c.offset.x===void 0||c.offset.y===void 0||c.offset.z===void 0||c.radius===void 0)return;const u=De.set(c.offset.x,c.offset.y,-c.offset.z),m=this._createColliderMesh(c.radius,u);o.add(m),l.push(m)});const d={node:s.node,colliders:l};a.push(d)})),a})}_createColliderMesh(e,n){const i=new t.Mesh(new t.SphereBufferGeometry(e,8,4),Ee);return i.position.copy(n),i.name="vrmColliderSphere",i.geometry.computeBoundingSphere(),i}}new t.Vector2,new t.OrthographicCamera(-1,1,-1,1,-1,1);const Ne=new t.MeshBasicMaterial({color:16777215,side:t.DoubleSide}),Oe=new t.Mesh(new t.PlaneBufferGeometry(2,2),Ne);new t.Scene().add(Oe),new t.Vector3,new t.MeshBasicMaterial({color:16711935,wireframe:!0,transparent:!0,depthTest:!1}),new t.Vector3;function Ue(r,e){if(e=e||{},W0(r,e),e.exclude){var n=[r];r.traverse(i=>n.push(i)),n.forEach(i=>{(~e.exclude.indexOf(i.id)||~e.exclude.indexOf(i.name))&&delete e.averagedDirs[i.id]})}return ze(r,e)}const qe=new t.Quaternion;new t.Vector3(0,1,0);function W0(r,e){return e=e||r,e.worldPos=e.worldPos||{},e.averagedDirs=e.averagedDirs||{},e.preRotations=e.preRotations||{},I0(r,e.worldPos),S0(r,e.worldPos,e.averagedDirs),e}function ze(r,e){return(!e||!e.worldPos)&&(e=e||{},W0(r,e)),H0(r,e.worldPos,e.averagedDirs,e.preRotations),e}function S0(r,e,n){var i=new t.Vector3;r.children.forEach(a=>{var s=e[a.id][0];i.add(s)}),i.multiplyScalar(1/r.children.length),n[r.id]=i,r.children.forEach(a=>{S0(a,e,n)})}function H0(r,e,n,i){var a=n[r.id];a&&(r.quaternion.copy(qe),r.updateMatrixWorld());var s=i[r.id]||i[r.name];s&&r.quaternion.multiply(s),r.updateMatrixWorld(),r.children.forEach(o=>{var l=e[o.id][0].clone();r.worldToLocal(l),o.position.copy(l)}),r.children.forEach(o=>{H0(o,e,n,i)})}new t.Vector3,new t.Vector3,new t.Vector3,new t.Matrix4;function I0(r,e){var n=r.getWorldPosition(new t.Vector3);e[r.id]=[n],r.children.forEach(i=>{I0(i,e)})}class je{constructor(){this.head=new t.Object3D,this.leftHand=new t.Object3D,this.leftHand.pointer=0,this.leftHand.grip=0,this.rightHand=new t.Object3D,this.rightHand.pointer=0,this.rightHand.grip=0,this.floorHeight=0}}class Ge{constructor(e){this.vrTransforms=new je,this.referencePlayerHeightHmd=1.79,this.referencePlayerWidthWrist=1.39,this.playerHeightHmd=1.79,this.playerWidthWrist=1.39}}class Q0{constructor(){this.transform=new t.Object3D,this.upperArm=new t.Object3D,this.lowerArm=new t.Object3D,this.hand=new t.Object3D,this.transform.add(this.upperArm),this.upperArm.add(this.lowerArm),this.lowerArm.add(this.hand)}}const Ye=new t.Vector3,Ze=new t.Vector3,g={getWorldPosition(r,e){return e.setFromMatrixPosition(r.matrixWorld)},getWorldQuaternion(r,e){return r.matrixWorld.decompose(Ye,e,Ze),e},getWorldScale(r,e){return e.setFromMatrixScale(r.matrixWorld)},updateMatrix(r){r.matrix.compose(r.position,r.quaternion,r.scale)},updateMatrixWorld(r){r.matrixWorld.multiplyMatrices(r.parent.matrixWorld,r.matrix)},updateMatrixMatrixWorld(r){r.matrix.compose(r.position,r.quaternion,r.scale),r.matrixWorld.multiplyMatrices(r.parent.matrixWorld,r.matrix)}},u0=new t.Vector3(1,0,0),o0=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI);new t.Vector3;const p0=new t.Vector3,j=new t.Vector3;new t.Vector3,new t.Vector3;const X=new t.Quaternion,g0=new t.Quaternion,J=new t.Quaternion,m0=new t.Euler;new t.Euler;let $e=!1;const Xe=new t.Quaternion(0,1,0,0);class Je{constructor(e,n){this.rig=e,this.shoulder=n,this.poseManager=e.poseManager,this.vrTransforms=this.poseManager.vrTransforms}Update(){this.shoulder.proneFactor=this.getProneFactor(),this.shoulder.prone=this.shoulder.proneFactor>0,this.shoulder.prone?this.shoulder.lastProneTimestamp=Date.now():this.shoulder.lastStandTimestamp=Date.now(),this.updateHips(),this.rotateShoulderBase(),this.updateNeck()}updateHips(){const e=X.copy(this.vrTransforms.head.quaternion).multiply(o0);let n=Xe;e.y<.72&&$e===!1&&(n=e);const i=m0.setFromQuaternion(n,"YXZ");i.x=0,i.z=0;const a=g0.setFromEuler(i);if(a.multiply(J.setFromAxisAngle(u0,this.shoulder.proneFactor*Math.PI/2)),!this.rig.legsManager.leftLeg.standing&&!this.rig.legsManager.rightLeg.standing){const u=1-Math.min(this.rig.legsManager.leftLeg.standFactor,this.rig.legsManager.rightLeg.standFactor);a.multiply(J.setFromAxisAngle(u0,u*Math.PI/4))}else{const u=Math.min(this.rig.legsManager.leftLeg.standFactor,this.rig.legsManager.rightLeg.standFactor);a.multiply(J.setFromAxisAngle(u0,(1-u)*Math.PI/4))}const c=p0.copy(this.vrTransforms.head.position).sub(j.copy(this.shoulder.eyes.position).applyQuaternion(e)).sub(j.copy(this.shoulder.head.position).applyQuaternion(e)).sub(j.copy(this.shoulder.neck.position).applyQuaternion(a)).sub(j.copy(this.shoulder.transform.position).applyQuaternion(a)).sub(j.copy(this.shoulder.spine.position).applyQuaternion(a));this.shoulder.hips.position.copy(c),this.shoulder.hips.quaternion.copy(a),g.updateMatrix(this.shoulder.hips),this.shoulder.hips.matrixWorld.copy(this.shoulder.hips.matrix),g.updateMatrixWorld(this.shoulder.spine),g.updateMatrixWorld(this.shoulder.transform)}updateNeck(){const e=X.copy(this.vrTransforms.head.quaternion).multiply(o0),n=m0.setFromQuaternion(e,"YXZ");n.x=0,n.z=0;const i=g0.setFromEuler(n);this.shoulder.neck.quaternion.copy(i).premultiply(g.getWorldQuaternion(this.shoulder.neck.parent,J).invert()),g.updateMatrixMatrixWorld(this.shoulder.neck),this.shoulder.head.quaternion.copy(e).premultiply(g.getWorldQuaternion(this.shoulder.head.parent,J).invert()),g.updateMatrixMatrixWorld(this.shoulder.head),g.updateMatrixWorld(this.shoulder.eyes)}rotateShoulderBase(){const e=this.getCombinedDirectionAngleUp();this.shoulder.transform.quaternion.setFromEuler(m0.set(0,e,0,"YXZ")).premultiply(X.copy(this.shoulder.hips.quaternion).multiply(o0)),this.shoulder.transform.quaternion.premultiply(g.getWorldQuaternion(this.shoulder.transform.parent,X).invert()),g.updateMatrixMatrixWorld(this.shoulder.transform),g.updateMatrixWorld(this.shoulder.leftShoulderAnchor),g.updateMatrixWorld(this.shoulder.rightShoulderAnchor)}getCombinedDirectionAngleUp(){const e=X.copy(this.shoulder.hips.quaternion).multiply(o0),n=g0.copy(e).invert(),i=p0.copy(this.vrTransforms.leftHand.position).sub(this.vrTransforms.head.position).applyQuaternion(n),a=j.copy(this.vrTransforms.rightHand.position).sub(this.vrTransforms.head.position).applyQuaternion(n);i.y=0,a.y=0;const s=i.z>0,o=a.z>0;s&&(i.z*=o?-2:-1),o&&(a.z*=s?-2:-1);const l=p0.addVectors(i.normalize(),a.normalize());return Math.atan2(l.x,l.z)}getProneFactor(){return 1-Math.min(Math.max((this.vrTransforms.head.position.y-this.rig.height*.3)/(this.rig.height*.3),0),1)}}const B0=new t.Vector3,Ke=new t.Vector3(0,0,1),D0=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI/2),E0=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),-Math.PI/2),et=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,0,1),Math.PI/2),tt=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,0,1),-Math.PI/2),rt=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI);new t.Vector3;const f0=new t.Vector3,K=new t.Vector3,it=new t.Vector3,C0=new t.Vector3,w0=new t.Vector3,N0=new t.Vector3,nt=new t.Quaternion,ot=new t.Quaternion,e0=new t.Quaternion,st=new t.Euler,O0=new t.Matrix4;let s0=!1,U0=0,G=0,a0=0,y0=0;class q0{constructor(e,n,i,a,s,o){this.arm=e,this.shoulder=n,this.shoulderPoser=i,this.target=a,this.left=s,this.upperArmLength=0,this.lowerArmLength=0,this.armLength=0,this.headQuaternion=o}Start(){this.upperArmLength=g.getWorldPosition(this.arm.lowerArm,f0).distanceTo(g.getWorldPosition(this.arm.upperArm,K)),this.lowerArmLength=g.getWorldPosition(this.arm.hand,f0).distanceTo(g.getWorldPosition(this.arm.lowerArm,K)),this.armLength=this.upperArmLength+this.lowerArmLength}Update(){g.updateMatrixWorld(this.arm.transform),g.updateMatrixWorld(this.arm.upperArm);const e=g.getWorldPosition(this.arm.upperArm,f0);let n=this.target.quaternion,i=K.copy(this.target.position),a=K.copy(this.target.position);const s=this.left?this.headQuaternion.y>.72?-.2:.2:this.headQuaternion.y>.72?.2:-.2,o=-.45,l=this.headQuaternion.y>.72?.15:-.15;let d=this.target.position.y.toFixed(5);G===4&&(s0=!0,G=0),a0===3&&(s0=!1,G=0,a0=0),y0+=1,s0?(y0%300===0&&a.y.toFixed(5)!=U0&&(a0+=1,console.log("Out AFK Time",a0)),this.target.position.y=this.shoulder.shoulderPoser.vrTransforms.head.position.y+o,this.target.position.x=this.shoulder.shoulderPoser.vrTransforms.head.position.x+s,this.target.position.z=this.shoulder.shoulderPoser.vrTransforms.head.position.z+l,i=K.copy(this.target.position)):y0%300===0&&setTimeout(()=>{this.target.position.y.toFixed(5)===d?(G+=1,U0=a.y.toFixed(5)):(G=0,s0=!1,d=this.target.position.y.toFixed(5)),console.log("In AFK Time",G)},1e3);const c=g.getWorldQuaternion(this.shoulder.transform,nt),u=ot.copy(c).invert(),m=this.upperArmLength,v=e.distanceTo(i)/2,f=m>v?Math.sqrt(m*m-v*v):0,x=it.copy(i).sub(e).normalize().cross(C0.set(-1,0,0).applyQuaternion(c)),_=st.setFromQuaternion(e0.multiplyQuaternions(n,u).premultiply(rt),"XYZ");if(this.left){const I=Math.min(Math.max((_.y+Math.PI*.1)/(Math.PI/2),0),1);_.z=Math.min(Math.max(_.z,-Math.PI/2),0),_.z=_.z*(1-I)+-Math.PI/2*I}else{const I=Math.min(Math.max((-_.y-Math.PI*.1)/(Math.PI/2),0),1);_.z=Math.min(Math.max(_.z,0),Math.PI/2),_.z=_.z*(1-I)+Math.PI/2*I}x.applyQuaternion(u).applyAxisAngle(Ke,_.z).applyQuaternion(c);const R=C0.copy(e).add(i).divideScalar(2).add(w0.copy(x).multiplyScalar(f)),O=w0.set(this.left?-1:1,0,0).applyQuaternion(c);this.arm.upperArm.quaternion.setFromRotationMatrix(O0.lookAt(B0,N0.copy(R).sub(e),O)).multiply(this.left?E0:D0).premultiply(g.getWorldQuaternion(this.arm.upperArm.parent,e0).invert()),g.updateMatrixMatrixWorld(this.arm.upperArm);const H=.001,F=this.left?H:-H,b=0,r0=0;let E=n.w+Math.PI/2.81,W=n.w+Math.PI/2.81,C=0;this.left?(C=E<1.2?this.headQuaternion.y>.72?E:E+2.2:this.headQuaternion.y>.72?E+2.2:E,console.log(this.headQuaternion.y)):C=W<1.2?this.headQuaternion.y>.72?W:W-4:this.headQuaternion.y>.72?W-4:W,this.arm.lowerArm.quaternion.setFromRotationMatrix(O0.lookAt(B0,N0.copy(i).sub(R),w0.set(F,b,r0).applyQuaternion(this.headQuaternion<.72?e0.setFromAxisAngle(new t.Vector3(n.x,n.y,n.z),C):n))).multiply(this.left?E0:D0).premultiply(g.getWorldQuaternion(this.arm.lowerArm.parent,e0).invert()),g.updateMatrixMatrixWorld(this.arm.lowerArm),this.arm.hand.quaternion.copy(this.target.quaternion).multiply(this.left?tt:et).premultiply(g.getWorldQuaternion(this.arm.hand.parent,e0).invert()),g.updateMatrixMatrixWorld(this.arm.hand)}}class at{constructor(e){this.transform=new t.Object3D,this.hips=new t.Object3D,this.spine=new t.Object3D,this.neck=new t.Object3D,this.head=new t.Object3D,this.eyes=new t.Object3D,this.hips.add(this.spine),this.spine.add(this.transform),this.transform.add(this.neck),this.neck.add(this.head),this.head.add(this.eyes),this.leftShoulderAnchor=new t.Object3D,this.transform.add(this.leftShoulderAnchor),this.rightShoulderAnchor=new t.Object3D,this.transform.add(this.rightShoulderAnchor),this.leftArm=new Q0,this.rightArm=new Q0,this.leftShoulderAnchor.add(this.leftArm.transform),this.rightShoulderAnchor.add(this.rightArm.transform),this.prone=!1,this.proneFactor=0;const n=Date.now();this.lastStandTimestamp=n,this.lastProneTimestamp=n,this.shoulderPoser=new Je(e,this),this.headQuaternion=e.poseManager.vrTransforms.head.quaternion.multiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI)),this.leftArmIk=new q0(this.leftArm,this,this.shoulderPoser,this.shoulderPoser.vrTransforms.leftHand,!0,this.headQuaternion),this.rightArmIk=new q0(this.rightArm,this,this.shoulderPoser,this.shoulderPoser.vrTransforms.rightHand,!1,this.headQuaternion)}Start(){this.leftArmIk.Start(),this.rightArmIk.Start()}Update(){this.shoulderPoser.Update(),this.leftArmIk.Update(),this.rightArmIk.Update()}}new t.Vector3,new t.Vector3(1,1,1),new t.Quaternion,new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),-Math.PI/2),new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),Math.PI/2),new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),-Math.PI/4);const z0=new t.Vector3;new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Quaternion,new t.Quaternion,new t.Quaternion,new t.Euler,new t.Matrix4,new t.Matrix4,new t.Matrix4;class j0{constructor(e,n){this.transform=new t.Object3D,this.upperLeg=new t.Object3D,this.lowerLeg=new t.Object3D,this.foot=new t.Object3D,this.foot.stickTransform=new t.Object3D,this.foot.startTransform=new t.Object3D,this.foot.endTransform=new t.Object3D,this.foot.startHmdFloorTransform=new t.Object3D,this.transform.add(this.upperLeg),this.upperLeg.add(this.lowerLeg),this.lowerLeg.add(this.foot),this.upperLegLength=0,this.lowerLegLength=0,this.legLength=0,this.eyesToUpperLegOffset=new t.Vector3,this.legsManager=e,this.left=n,this.standing=!0,this.standFactor=1;const i=Date.now();this.lastStandTimestamp=i,this.lastJumpTimestamp=i,this.stepping=!1,this.lastStepTimestamp=i,this.balance=1}Start(){this.upperLegLength=this.lowerLeg.position.length(),this.lowerLegLength=this.foot.position.length(),this.legLength=this.upperLegLength+this.lowerLegLength,g.getWorldPosition(this.upperLeg,this.eyesToUpperLegOffset).sub(g.getWorldPosition(this.legsManager.rig.shoulderTransforms.eyes,z0))}Update(){const e=z0.copy(this.foot.stickTransform.position);this.foot.quaternion.copy(e),this.lowerLeg.quaternion.copy(e),g.updateMatrixMatrixWorld(this.upperLeg),g.updateMatrixMatrixWorld(this.lowerLeg),g.updateMatrixMatrixWorld(this.foot)}}class lt{constructor(e){this.hips=e.shoulderTransforms.hips,this.leftLeg=new j0(this,!0),this.hips.add(this.leftLeg.transform),this.rightLeg=new j0(this,!1),this.hips.add(this.rightLeg.transform),this.rig=e,this.poseManager=e.poseManager,this.legSeparation=0,this.lastHmdPosition=new t.Vector3,this.hmdVelocity=new t.Vector3}Start(){this.leftLeg.Start(),this.rightLeg.Start()}Update(){this.leftLeg.Update(),this.rightLeg.Update()}}var ht=`const numTicks = 1;\r
\r
let tick = 0;\r
let sampleSum = 0;\r
let numSamples = 0;\r
let muted = true;\r
\r
class VolumeProcessor extends AudioWorkletProcessor {\r
  constructor() {\r
    super();\r
\r
    this.port.addEventListener('message', e => {\r
      const data = JSON.parse(e.data);\r
      const {method} = data;\r
      if (method === 'muted') {\r
        muted = data.muted;\r
      }\r
    });\r
    this.port.start();\r
  }\r
  process(inputs, outputs) {\r
    const channels = inputs[0];\r
    // const output = outputs[0];\r
\r
    // for (let i = 0; i < channels.length; i++) {\r
      const i = 0;\r
      const samples = channels[i];\r
      for (let j = 0; j < samples.length; j++) {\r
        sampleSum += Math.abs(samples[j]);\r
      }\r
      numSamples += samples.length;\r
    // }\r
\r
    if (++tick >= numTicks) {\r
      this.port.postMessage(sampleSum / numSamples);\r
\r
      tick = 0;\r
      sampleSum = 0;\r
      numSamples = 0;\r
    }\r
\r
    if (!muted) {\r
      for (let i = 0; i < outputs.length; i++) {\r
        const input = inputs[i];\r
        const output = outputs[i];\r
\r
        for (let channel = 0; channel < output.length; channel++) {\r
          output[channel].set(input[channel]);\r
        }\r
      }\r
    }\r
\r
    return true;\r
  }\r
}\r
registerProcessor('volume-processor', VolumeProcessor);`;class ct extends EventTarget{constructor(e,n={}){super();const i=document.createElement("audio");i.srcObject=e,i.muted=!0,this.audioContext=new AudioContext;const a=this.audioContext.createMediaStreamSource(e);this.audioContext.audioWorklet.addModule(n.microphoneWorkletUrl||`data:application/javascript;charset=utf8,${encodeURIComponent(ht)}`).then(()=>{const s=new AudioWorkletNode(this.audioContext,"volume-processor");n.muted===!1&&s.port.postMessage(JSON.stringify({method:"muted",muted:!1})),s.port.onmessage=o=>{this.dispatchEvent(new MessageEvent("volume",{data:o.data}))},a.connect(s).connect(this.audioContext.destination)})}close(){this.audioContext.close()}}var dt='["Armature",[0,0,0,0,0,0,1,1,1,1],[["Hips",[-4.764560328305439e-22,0.9901136159896851,0.040974393486976624,1,-1.9958527221869936e-15,1.1920922560193503e-7,-9.735359896012596e-8,1,0.9999999403953552,0.9999999403953552],[["Spine",[8.881776256067372e-16,-1.2409380190092634e-7,-7.450584149637507e-9,0.9997583031654358,-3.4153149197635457e-9,1.1921520126634277e-7,0.021985134109854698,1,1.0000001192092896,1.0000735521316528],[["Chest",[-2.8913337305627534e-16,0.08727944642305374,-1.5612890535976476e-8,-0.05003303661942482,1.1906852392939982e-7,-5.966564575743405e-9,0.9987475872039795,1,0.9999998807907104,0.9999999403953552],[["Neck",[-7.525669201854067e-15,0.1973666548728943,1.130800697524137e-8,0.07688746601343155,-1.1883879835750122e-7,9.171047921086029e-9,0.9970398545265198,1,0.9999996423721313,0.9999999403953552],[["Head",[-1.268057280792193e-19,0.06861116737127304,2.575603064158827e-10,-0.004925626330077648,-2.6168825786876404e-11,-3.042392997688187e-13,0.9999879002571106,1,1.0000001192092896,1.000000238418579],[["Eye_R",[-0.02648639865219593,0.05120223015546799,0.019837098196148872,-0.160249263048172,0.6969521045684814,0.6969586610794067,0.05316544696688652,1,1.0000001192092896,0.9999999403953552],[]],["Eye_L",[0.02648639865219593,0.05120223015546799,0.019837098196148872,-0.160249263048172,-0.6969521045684814,-0.6969586610794067,0.05316544696688652,1,1.0000001192092896,0.9999999403953552],[]],["StandingEars1_R",[-0.04328959435224533,0.13830988109111786,-0.017249949276447296,0.1357475221157074,0.04495804384350777,0.044957272708415985,0.9887012839317322,1.0000001192092896,0.9999998807907104,0.9999999403953552],[["StandingEars2_R",[3.2651956693996453e-9,0.029600219801068306,-1.0180473708487625e-7,-0.0003664675750769675,-0.01292889378964901,-0.009843501262366772,0.9998679161071777,0.9999998211860657,1,0.9999998211860657],[["StandingEars3_R",[3.868987352717568e-9,0.046097323298454285,-3.8355018716629274e-8,0.09286198019981384,-0.05294885113835335,-0.03466515615582466,0.9936656355857849,0.9999998807907104,0.9999998807907104,0.9999998211860657],[]]]]]],["StandingEars1_L",[0.04328959435224533,0.13830988109111786,-0.017249949276447296,0.1357475221157074,-0.04495804384350777,-0.044957272708415985,0.9887012839317322,1.0000001192092896,0.9999998807907104,0.9999999403953552],[["StandingEars2_L",[-3.2651956693996453e-9,0.029600219801068306,-1.0180473708487625e-7,-0.0003664675750769675,0.01292889378964901,0.009843501262366772,0.9998679161071777,0.9999998211860657,1,0.9999998211860657],[["StandingEars3_L",[-3.868987352717568e-9,0.046097323298454285,-3.8355018716629274e-8,0.09286198019981384,0.05294885113835335,0.03466515615582466,0.9936656355857849,0.9999998807907104,0.9999998807907104,0.9999998211860657],[]]]]]],["Hair1_R",[-0.05674159526824951,0.14185218513011932,0.004379991441965103,-0.9789010286331177,0.14186254143714905,0.14183951914310455,0.038852352648973465,1.0000029802322388,1.0000003576278687,1],[["Hair2_R",[-3.67872416973114e-8,0.07205186039209366,-3.725290298461914e-9,0.06192794442176819,0.027937548235058784,-0.04899432510137558,0.9964858293533325,0.9999998807907104,0.9999998807907104,0.9999999403953552],[["Hair3_R",[-3.529947889546747e-8,0.10827109217643738,6.058744617121192e-9,0.10654902458190918,-0.10275916755199432,0.10163572430610657,0.9837469458580017,0.9999998211860657,0.9999998211860657,0.9999999403953552],[["Hair5_R",[-4.922059559930858e-8,0.2657814919948578,-1.1666276833466327e-7,0.0902017205953598,0.09775179624557495,-0.20269449055194855,0.9701666831970215,1.0000001192092896,1.0000001192092896,1],[["Hair6_R",[-1.862645149230957e-9,0.09898854792118073,-4.6566128730773926e-8,-0.23959340155124664,0.12270104140043259,-0.20550969243049622,0.9409065842628479,1.0000003576278687,1.0000001192092896,1.000000238418579],[["Hair7_R",[3.166496753692627e-8,0.09518476575613022,1.1175870895385742e-8,-0.10351262986660004,-0.14494562149047852,0.13637173175811768,0.9745146036148071,0.9999998807907104,0.9999997615814209,0.9999997615814209],[["Hair8_R",[3.725290298461914e-9,0.09951279312372208,1.7695128917694092e-8,0.13740508258342743,-0.01385509967803955,0.008886626921594143,0.9903782606124878,0.9999999403953552,0.9999998807907104,1],[]]]]]]]]]]]]]],["Hair1_L",[0.06208624690771103,0.14414384961128235,-0.01495930552482605,-0.978900671005249,-0.14185091853141785,-0.14185169339179993,0.03885859623551369,0.9999966025352478,0.9999997019767761,0.9999999403953552],[["Hair2_L",[-1.6298145055770874e-9,0.07205165177583694,2.7939677238464355e-9,0.06192799285054207,-0.0279371440410614,0.04899446293711662,0.9964858293533325,1,0.9999998807907104,0.9999999403953552],[["Hair3_L",[-1.257285475730896e-8,0.10827106237411499,-1.862645149230957e-8,0.10654883086681366,0.10275834798812866,-0.10163601487874985,0.9837470054626465,1,1.0000001192092896,1],[["Hair5_L",[-1.1175870895385742e-8,0.26578161120414734,1.4901161193847656e-8,0.09020152688026428,-0.0977509468793869,0.20269547402858734,0.9701665043830872,0.9999998807907104,0.9999997615814209,0.9999999403953552],[["Hair6_L",[1.862645149230957e-9,0.09898875653743744,-5.587935447692871e-9,-0.2395932972431183,-0.12270071357488632,0.20550943911075592,0.940906822681427,0.9999998807907104,0.9999996423721313,0.9999997615814209],[["Hair7_L",[3.725290298461914e-9,0.0951850414276123,7.450580596923828e-9,-0.10351207852363586,0.14494460821151733,-0.1363714635372162,0.9745148420333862,1.0000001192092896,0.9999998211860657,0.9999998807907104],[["Hair8_L",[-2.7939677238464355e-9,0.09951331466436386,-1.3504177331924438e-8,0.13740453124046326,0.013855460099875927,-0.008887086994946003,0.9903782606124878,0.9999998807907104,1.0000001192092896,0.9999997615814209],[]]]]]]]]]]]]]],["Hair21_R",[-0.024621548131108284,0.14939874410629272,-0.0411190427839756,-0.971066415309906,0.11676698923110962,0.11678998917341232,0.1724979430437088,0.9999992251396179,0.9999998807907104,0.9999991655349731],[["Hair22_R",[-1.7080894920695755e-8,0.07549650222063065,-2.1185213583407858e-8,0.042726077139377594,-0.02246226742863655,0.01964012160897255,0.9986411929130554,0.9999997615814209,0.9999998211860657,0.9999998807907104],[["Hair23_R",[1.30385160446167e-8,0.11306732892990112,1.862645149230957e-9,-0.006093519274145365,0.037633929401636124,-0.05706079304218292,0.9976426362991333,0.9999999403953552,0.9999998807907104,0.9999998211860657],[["Hair24_R",[7.450580596923828e-9,0.21121430397033691,1.1175870895385742e-8,0.04010539874434471,-0.0758029893040657,0.10839971154928207,0.9904014468193054,1.0000001192092896,0.9999998211860657,1],[["Hair25_R",[7.450580596923828e-9,0.1725718230009079,3.725290298461914e-8,-0.17603935301303864,0.029646748676896095,0.04157049581408501,0.9830580353736877,1,1.0000001192092896,1.0000001192092896],[["Hair26_R",[2.9802322387695312e-8,0.1238829717040062,-2.2351741790771484e-8,0.03691902384161949,0.28326982259750366,-0.3386003077030182,0.8965182900428772,0.9999998807907104,1,0.9999998211860657],[["Hair27_R",[0,0.11360013484954834,3.725290298461914e-9,0.18678219616413116,0.03417342156171799,0.01253802701830864,0.9817267656326294,1.0000001192092896,1,1],[["Hair28_R",[4.470348358154297e-8,0.12201113998889923,-2.0489096641540527e-8,-0.110519178211689,-0.1095462366938591,0.16148608922958374,0.9745293259620667,1,1.000000238418579,1],[]]]]]]]]]]]]]]]],["Hair21_L",[0.024621548131108284,0.14939874410629272,-0.0411190427839756,-0.971066415309906,-0.11676698923110962,-0.11678998917341232,0.1724979430437088,0.9999992251396179,0.9999998807907104,0.9999991655349731],[["Hair22_L",[1.7080894920695755e-8,0.07549650222063065,-2.1185213583407858e-8,0.042726077139377594,0.02246226742863655,-0.01964012160897255,0.9986411929130554,0.9999997615814209,0.9999998211860657,0.9999998807907104],[["Hair23_L",[-1.30385160446167e-8,0.11306732892990112,1.862645149230957e-9,-0.006093519274145365,-0.037633929401636124,0.05706079304218292,0.9976426362991333,0.9999999403953552,0.9999998807907104,0.9999998211860657],[["Hair24_L",[-7.450580596923828e-9,0.21121430397033691,1.1175870895385742e-8,0.04010539874434471,0.0758029893040657,-0.10839971154928207,0.9904014468193054,1.0000001192092896,0.9999998211860657,1],[["Hair25_L",[-7.450580596923828e-9,0.1725718230009079,3.725290298461914e-8,-0.17603935301303864,-0.029646748676896095,-0.04157049581408501,0.9830580353736877,1,1.0000001192092896,1.0000001192092896],[["Hair26_L",[-2.9802322387695312e-8,0.1238829717040062,-2.2351741790771484e-8,0.03691902384161949,-0.28326982259750366,0.3386003077030182,0.8965182900428772,0.9999998807907104,1,0.9999998211860657],[["Hair27_L",[0,0.11360013484954834,3.725290298461914e-9,0.18678219616413116,-0.03417342156171799,-0.01253802701830864,0.9817267656326294,1.0000001192092896,1,1],[["Hair28_L",[-4.470348358154297e-8,0.12201113998889923,-2.0489096641540527e-8,-0.110519178211689,0.1095462366938591,-0.16148608922958374,0.9745293259620667,1,1.000000238418579,1],[]]]]]]]]]]]]]]]],["Hair31_R",[-0.0006344257271848619,0.14939913153648376,-0.07985317707061768,-0.9843132495880127,0.06418239325284958,0.06423899531364441,0.15126599371433258,1.000000238418579,1.0000001192092896,1.0000004768371582],[["Hair32_R",[-1.210719347000122e-8,0.0727984756231308,-1.979060471057892e-8,0.056747280061244965,0.01272169966250658,-0.02604222483932972,0.9979678988456726,1,0.9999999403953552,0.9999998211860657],[["Hair33_R",[1.3969838619232178e-8,0.10768461972475052,-1.2898817658424377e-7,0.026520270854234695,0.010424706153571606,-0.019086375832557678,0.9994117617607117,1,1,1],[["Hair34_R",[-3.725290298461914e-9,0.21081344783306122,1.3154931366443634e-8,0.06844703108072281,-0.052156127989292145,0.07988469302654266,0.9930827021598816,0.9999999403953552,1.000000238418579,1.0000001192092896],[["Hair35_R",[0,0.1719989776611328,4.0978193283081055e-8,-0.1205706000328064,-0.04455515742301941,0.12126009166240692,0.984263002872467,1,0.9999998807907104,0.9999999403953552],[["Hair36_R",[-4.470348358154297e-8,0.12351469695568085,-3.725290298461914e-9,-0.037015192210674286,0.20051102340221405,-0.27156707644462585,0.9405725002288818,1,0.9999999403953552,0.9999999403953552],[["Hair37_R",[1.4901161193847656e-8,0.11350540816783905,1.210719347000122e-8,0.17390818893909454,0.06217547133564949,-0.05911845713853836,0.981017529964447,0.9999998807907104,1,1.0000001192092896],[["Hair38_R",[1.4901161193847656e-8,0.12201984971761703,-7.450580596923828e-9,-0.11115529388189316,-0.12800024449825287,0.21284005045890808,0.9622679352760315,1,0.9999998211860657,0.9999997019767761],[]]]]]]]]]]]]]]]],["Hair31_L",[0.0006344257271848619,0.14939913153648376,-0.07985317707061768,-0.9843132495880127,-0.06418239325284958,-0.06423899531364441,0.15126599371433258,1.000000238418579,1.0000001192092896,1.0000004768371582],[["Hair32_L",[1.210719347000122e-8,0.0727984756231308,-1.979060471057892e-8,0.056747280061244965,-0.01272169966250658,0.02604222483932972,0.9979678988456726,1,0.9999999403953552,0.9999998211860657],[["Hair33_L",[-1.3969838619232178e-8,0.10768461972475052,-1.2898817658424377e-7,0.026520270854234695,-0.010424706153571606,0.019086375832557678,0.9994117617607117,1,1,1],[["Hair34_L",[3.725290298461914e-9,0.21081344783306122,1.3154931366443634e-8,0.06844703108072281,0.052156127989292145,-0.07988469302654266,0.9930827021598816,0.9999999403953552,1.000000238418579,1.0000001192092896],[["Hair35_L",[0,0.1719989776611328,4.0978193283081055e-8,-0.1205706000328064,0.04455515742301941,-0.12126009166240692,0.984263002872467,1,0.9999998807907104,0.9999999403953552],[["Hair36_L",[4.470348358154297e-8,0.12351469695568085,-3.725290298461914e-9,-0.037015192210674286,-0.20051102340221405,0.27156707644462585,0.9405725002288818,1,0.9999999403953552,0.9999999403953552],[["Hair37_L",[-1.4901161193847656e-8,0.11350540816783905,1.210719347000122e-8,0.17390818893909454,-0.06217547133564949,0.05911845713853836,0.981017529964447,0.9999998807907104,1,1.0000001192092896],[["Hair38_L",[-1.4901161193847656e-8,0.12201984971761703,-7.450580596923828e-9,-0.11115529388189316,0.12800024449825287,-0.21284005045890808,0.9622679352760315,1,0.9999998211860657,0.9999997019767761],[]]]]]]]]]]]]]]]],["Sideburn1_R",[-0.08463571220636368,0.059588078409433365,0.027148611843585968,0.9995024800300598,0.019347738474607468,0.017921678721904755,0.017299650236964226,1.0000600814819336,1.0000001192092896,1.000059962272644],[["Sideburn2_R",[-3.14321368932724e-9,0.05695805698633194,1.1641532182693481e-9,0.0010487505933269858,0.07849115133285522,-0.0757785215973854,0.9940301179885864,0.9999999403953552,1,0.9999998211860657],[]]]],["Sideburn1_L",[0.08316104114055634,0.05958808586001396,0.02714860998094082,0.999524712562561,-0.018206028267741203,-0.017917050048708916,0.017257805913686752,1.0000168085098267,1,1.0000168085098267],[["Sideburn2_L",[3.958120942115784e-9,0.056958332657814026,-9.313225746154785e-10,0.001054661814123392,-0.07849068194627762,0.07578069716691971,0.9940298795700073,0.9999999403953552,0.9999999403953552,0.9999997019767761],[]]]],["FrontHair1",[-0.0801674947142601,0.12183096259832382,0.06070006638765335,0.9904160499572754,-0.09750665724277496,-0.09754859656095505,0.007277561351656914,1.0000026226043701,1.0000001192092896,1],[["FrontHair1_2",[-1.4901161193847656e-8,0.06380410492420197,-1.5832483768463135e-8,0.07633671164512634,0.10690629482269287,-0.12024792283773422,0.9840143322944641,1.0000001192092896,1,0.9999999403953552],[]]]],["FrontHair2",[-0.003160707652568817,0.1368127316236496,0.09830453991889954,0.9842233657836914,0.07744413614273071,0.07740821689367294,0.13897834718227386,1,1,1.0000004768371582],[["FrontHair2_2",[7.08916516600766e-8,0.05305123329162598,-3.7533936847466975e-8,0.19803227484226227,-0.012096422724425793,0.03645673021674156,0.9794427156448364,1,0.9999999403953552,1.0000001192092896],[]]]],["FrontHair3",[0.07869279384613037,0.12183097004890442,0.060700077563524246,0.9904158711433411,0.09750817716121674,0.09754922240972519,0.007277223747223616,1.000002384185791,1,1],[["FrontHair3_2",[2.421438694000244e-8,0.06380397081375122,-1.862645149230957e-9,0.0763363465666771,-0.10690655559301376,0.12024860084056854,0.9840142726898193,0.9999998807907104,1,0.9999998211860657],[]]]],["LeftEye",[0.028106696903705597,0.04913211241364479,0.02728760987520218,-3.7235006744573695e-11,-4.789836638484455e-15,-8.845238583866293e-21,1,1,1,1.0000001192092896],[]],["RightEye",[-0.028988290578126907,0.04911495000123978,0.02688763290643692,-3.7235006744573695e-11,-4.789836638484455e-15,-8.845238583866293e-21,1,1,1,1.0000001192092896],[]]]]]],["Right_shoulder",[-0.01879039779305458,0.1747818887233734,-0.000242409689235501,-0.5975834727287292,0.4451692998409271,0.5144044160842896,0.4243896007537842,0.9999998211860657,0.9999998211860657,0.9999996423721313],[["Right_arm",[5.98272009710854e-8,0.06950049847364426,-1.0726226662427507e-7,-0.17996826767921448,0.1933135837316513,-0.08750152587890625,0.9605127573013306,1.0000001192092896,1,1],[["Right_elbow",[8.39414795450466e-8,0.21507789194583893,-4.481635684783214e-8,-0.007842862978577614,-0.001910681719891727,0.013383752666413784,0.9998778700828552,0.9999998807907104,1,0.9999998807907104],[["Right_wrist",[-4.8142922537408595e-8,0.1890689581632614,-1.6776754208081002e-8,0.0038253096863627434,0.0192723385989666,-0.03635840117931366,0.9991456866264343,0.9999529123306274,0.9999997615814209,0.9999743700027466],[["Thumb0_R",[-0.0015274710021913052,0.013934989459812641,-0.01448698528110981,-0.3260788023471832,0.172303706407547,0.11251583695411682,0.9226723313331604,1.0000003576278687,1.0000004768371582,1.0000001192092896],[["Thumb1_R",[-4.6566128730773926e-8,0.04147572070360184,1.862645149230957e-9,0.13270437717437744,-0.0907953605055809,-0.03271203488111496,0.9864460825920105,1.0000001192092896,0.9999995827674866,0.9999997615814209],[["Thumb2_R",[-5.9600079538313366e-8,0.018970059230923653,2.214782846010621e-8,0.027074433863162994,-0.02721540257334709,0.001372111844830215,0.9992619156837463,1.0000001192092896,1.0000001192092896,1.0000003576278687],[]]]]]],["LittleFinger1_R",[0.019163303077220917,0.064740851521492,0.011390747502446175,-0.030019935220479965,0.001478685182519257,0.03402372822165489,0.9989690184593201,1.0000001192092896,1,1.0000001192092896],[["LittleFinger2_R",[1.4120120184202278e-8,0.027081796899437904,1.6113239098558552e-7,0.034664399921894073,-0.04437341168522835,0.024598155170679092,0.9981104731559753,0.9999998807907104,0.9999995827674866,0.9999997615814209],[["LittleFinger3_R",[3.079840027453429e-8,0.01231003925204277,4.4105231467028716e-8,-0.07590803503990173,0.07809292525053024,-0.021812133491039276,0.9938127994537354,0.9999999403953552,0.9999998807907104,0.9999999403953552],[]]]]]],["RingFinger1_R",[0.0054548936896026134,0.06837297230958939,0.006870504934340715,-0.0357401967048645,0.014316110871732235,0.01984764076769352,0.9990614652633667,1.0000001192092896,1.0000003576278687,1.000000238418579],[["RingFinger2_R",[6.366883553710068e-8,0.033084455877542496,-4.110254536726643e-8,0.00818269606679678,-0.007274249568581581,0.0013416421134024858,0.9999392628669739,0.9999997615814209,0.9999998807907104,0.9999998211860657],[["RingFinger3_R",[3.671115322845253e-8,0.017962312325835228,1.2718248854071135e-7,-0.01127212680876255,-0.01896950602531433,0.04194747284054756,0.99887615442276,1,0.9999998807907104,0.9999999403953552],[]]]]]],["MiddleFinger1_R",[-0.007915524765849113,0.07169001549482346,-0.0021115546114742756,-0.02076011896133423,0.01734338141977787,-0.0033277312759310007,0.9996285438537598,1.000000238418579,1.0000001192092896,1.000000238418579],[["MiddleFinger2_R",[5.722484708314823e-9,0.035151466727256775,7.455829376112888e-8,-0.006091028917580843,-0.005398651584982872,0.015210472047328949,0.9998512268066406,1,0.9999999403953552,0.9999998807907104],[["MiddleFinger3_R",[6.05359673500061e-8,0.019062386825680733,-5.960464477539063e-8,0.005041174590587616,-0.038143955171108246,0.051979146897792816,0.9979067444801331,1,1,0.9999998807907104],[]]]]]],["IndexFinger1_R",[-0.017795158550143242,0.07101564109325409,-0.014736505225300789,-0.01829482987523079,0.006327447015792131,0.011805253103375435,0.9997429251670837,1.0000001192092896,1.000000238418579,1.000000238418579],[["IndexFinger2_R",[8.187744526821916e-8,0.031378790736198425,1.3781348684460681e-7,-0.005569496192038059,-0.005402309820055962,0.014982388354837894,0.9998576641082764,0.9999997615814209,0.9999998807907104,0.9999998211860657],[["IndexFinger3_R",[-3.167941997617163e-8,0.015219328925013542,1.4340538712076523e-7,0.02257685363292694,-0.0029471623711287975,-0.02278923988342285,0.9994810223579407,1,0.9999995827674866,0.9999998807907104],[]]]]]]]]]]]]]],["Left_shoulder",[0.018790405243635178,0.1747818887233734,-0.0002424004633212462,-0.5975832939147949,-0.4451693594455719,-0.5144046545028687,0.42438948154449463,0.9999998807907104,0.9999998807907104,0.9999995827674866],[["Left_arm",[1.3969838619232178e-9,0.06950058043003082,-1.0337680578231812e-7,-0.17996826767921448,-0.19331371784210205,0.08750160038471222,0.9605127573013306,1.0000003576278687,0.9999999403953552,1.0000001192092896],[["Left_elbow",[-2.5659550928480712e-8,0.21507783234119415,1.0907623959610646e-7,-0.007842880673706532,0.0019107592524960637,-0.013383783400058746,0.9998778700828552,0.9999998807907104,0.9999999403953552,1.0000001192092896],[["Left_wrist",[-1.5220155802353474e-8,0.1890687644481659,-4.7414722814664856e-8,0.003825301770120859,-0.019272271543741226,0.03635850548744202,0.9991456866264343,0.9999527931213379,0.9999997019767761,0.9999744296073914],[["Thumb0_L",[0.0015275380574166775,0.013934840448200703,-0.014487024396657944,-0.3351394832134247,-0.17010395228862762,-0.12714055180549622,0.9179223775863647,0.9999998807907104,0.9999998807907104,0.9999998211860657],[["Thumb1_L",[-1.6947907965914055e-8,0.04145832359790802,5.602798580639501e-8,0.16773849725723267,0.07295140624046326,0.07105859369039536,0.9805572628974915,1.0000003576278687,1.0000001192092896,1.0000004768371582],[["Thumb2_L",[-6.332993507385254e-8,0.019382163882255554,2.60770320892334e-8,0.006650859955698252,0.037380147725343704,-0.031075097620487213,0.9987958073616028,0.9999998807907104,0.9999998211860657,0.9999997615814209],[]]]]]],["LittleFinger1_L",[-0.01916319690644741,0.06474068760871887,0.011390762403607368,-0.030019866302609444,-0.0014784729573875666,-0.03402400389313698,0.9989689588546753,0.9999997615814209,1,0.9999995231628418],[["LittleFinger2_L",[2.514570951461792e-8,0.027081817388534546,2.8870999813079834e-8,0.03466673940420151,0.04437600448727608,-0.024599377065896988,0.9981101751327515,0.9999999403953552,1,1.0000001192092896],[["LittleFinger3_L",[8.014277597112596e-8,0.012310044839978218,3.073186150004403e-8,-0.07591863721609116,-0.0781082957983017,0.021822672337293625,0.9938104748725891,1,1.0000003576278687,1.000000238418579],[]]]]]],["RingFinger1_L",[-0.005454880651086569,0.06837291270494461,0.0068704127334058285,-0.0357399582862854,-0.014315797947347164,-0.019847838208079338,0.9990614652633667,0.9999997019767761,1,0.9999999403953552],[["RingFinger2_L",[2.394732412369649e-8,0.03308451548218727,-2.8065223034445808e-8,0.008181936107575893,0.0072730788961052895,-0.001341068185865879,0.9999392628669739,0.9999997615814209,0.9999998807907104,0.9999998211860657],[["RingFinger3_L",[-1.004644190061299e-8,0.01796233281493187,-3.7867677882275075e-9,-0.011276206001639366,0.01896512135863304,-0.04194345325231552,0.9988764524459839,1.0000001192092896,1,1.000000238418579],[]]]]]],["MiddleFinger1_L",[0.007915681228041649,0.07168976217508316,-0.002111495938152075,-0.02076040767133236,-0.017343644052743912,0.003328082850202918,0.999628484249115,0.9999997019767761,0.9999998807907104,0.9999998807907104],[["MiddleFinger2_L",[7.450580596923828e-9,0.03515138849616051,-1.30385160446167e-7,-0.006087168585509062,0.00540324067696929,-0.015214309096336365,0.9998511672019958,1.0000001192092896,1.000000238418579,1.0000001192092896],[["MiddleFinger3_L",[-6.839679400627574e-8,0.019062433391809464,-5.216803344865184e-8,0.0050251055508852005,0.03812279924750328,-0.05196557566523552,0.997908353805542,0.9999999403953552,0.9999999403953552,1.000000238418579],[]]]]]],["IndexFinger1_L",[0.01779543049633503,0.07101528346538544,-0.014736324548721313,-0.01829489879310131,-0.0063277240842580795,-0.011805121786892414,0.9997429847717285,0.9999997615814209,0.9999998807907104,0.9999998807907104],[["IndexFinger2_L",[-5.397573588084015e-8,0.031378962099552155,-1.8634620957413972e-8,-0.0055688172578811646,0.0054030949249863625,-0.014982689172029495,0.9998576641082764,0.9999999403953552,1.0000001192092896,0.9999999403953552],[["IndexFinger3_L",[5.59308048764251e-8,0.015219523571431637,-1.0254986904101315e-7,0.022577444091439247,0.0029488063883036375,0.022788310423493385,0.9994810223579407,1.0000001192092896,1.0000001192092896,1],[]]]]]]]]]]]]]]]]]],["Right_leg",[-0.07171519845724106,0.11545264720916748,0.013953566551208496,1,-3.3001185012921383e-15,7.549787994776125e-8,4.371138473402425e-8,1,1,1],[["Right_knee",[-0.005757778882980347,-0.38112956285476685,-0.02434052713215351,-0.9978883862495422,0.00334024615585804,0.0032219490967690945,0.06478682905435562,1,1,1.000006079673767],[["Right_ankle",[-1.04482751339674e-8,0.41037216782569885,-5.238689482212067e-10,-0.5227291584014893,0.003925474360585213,-0.001032647560350597,0.8524892330169678,1,1.0000063180923462,1.0000017881393433],[["Right_toe",[1.4420045157947925e-9,0.13481487333774567,2.1529187321789323e-9,-0.014249805361032486,-0.9540945291519165,0.295349657535553,0.04763595014810562,1.000000238418579,0.9999997615814209,1.000000238418579],[]]]]]],["Right_leg_2",[-1.2538918348070638e-8,1.2243042135651194e-7,4.406330855744045e-9,-0.9994344711303711,0.007606137543916702,0.007319035939872265,0.031929031014442444,1.000003695487976,0.9999999403953552,1.0000666379928589],[]]]],["Left_leg",[0.07171519845724106,0.11545264720916748,0.013953600078821182,1,-3.3001185012921383e-15,7.549787994776125e-8,4.371138473402425e-8,1,1,1],[["Left_knee",[0.005757778882980347,-0.38112956285476685,-0.02434053272008896,-0.997888445854187,-0.0033341345842927694,-0.003221433609724045,0.0647864118218422,1.0000001192092896,1,0.9999916553497314],[["Left_ankle",[4.71482053399086e-9,0.41037219762802124,-8.498318493366241e-9,-0.5227322578430176,-0.003925326745957136,0.0010325344046577811,0.8524872660636902,1,1.000006914138794,1.0000017881393433],[["Left_toe",[5.078697018490175e-9,0.13481630384922028,3.6854230778260444e-9,-0.00705345906317234,0.9549729228019714,-0.2956053912639618,0.024385549128055573,1.0000001192092896,0.9999997615814209,1],[]]]]]],["Left_leg_2",[1.7263394269662058e-8,1.2243042135651194e-7,3.0436120290744384e-9,-0.9994344711303711,-0.0076051512733101845,-0.007318862713873386,0.031929049640893936,1.000003695487976,0.9999998211860657,1.0000663995742798],[]]]],["ButtTail1",[-1.1981897252155704e-8,-0.02092289924621582,0.050255756825208664,0.5375427007675171,-1.0052156085293973e-7,6.408001951285769e-8,0.8432365655899048,1,1.000000238418579,1.0000001192092896],[["ButtTail2",[1.0191943551065174e-21,0.0586438924074173,-7.127986201282965e-9,-0.12333579361438751,6.8843801339713625e-15,9.183842075222767e-15,0.9923650026321411,1,0.9999998807907104,1],[["ButtTail3",[4.235164736271502e-22,0.10357242822647095,-2.2351741790771484e-8,-0.03757038712501526,1.1912510444744839e-7,-4.478739157320888e-9,0.9992939829826355,0.9999998807907104,0.9999999403953552,1],[["ButtTail4",[-5.4619776109214764e-15,0.11008850485086441,7.876878527213194e-8,-0.1003396213054657,-1.186076019621396e-7,-1.1961430068652135e-8,0.9949532747268677,1.000000238418579,0.9999998211860657,1],[["ButtTail5",[2.010920699710984e-21,0.09006699919700623,-1.0566629526920224e-7,0.105939120054245,-7.351681011191508e-15,1.4716131891095822e-14,0.9943727254867554,0.9999998807907104,1.0000001192092896,1.0000001192092896],[["ButtTail6",[-1.6940658945086007e-21,0.07949180901050568,-1.4901161193847656e-8,0.14714114367961884,-5.748782119828835e-15,-1.0824529435703059e-15,0.9891155958175659,1.0000001192092896,1,0.9999998807907104],[["ButtTail7",[1.6940658945086007e-21,0.08018326759338379,4.470348358154297e-8,0.06513970345258713,-2.4075060758713736e-15,-1.014999792453065e-15,0.9978761672973633,0.9999998807907104,0.9999999403953552,0.9999998211860657],[]]]]]]]]]]]]]]]],["Body",[0,0,0,0,0,0,1,1,1,1],[["Ia body.007_0",[0,0,0,0,0,0,1,1,1,1],[]],["Ia body.007_1",[0,0,0,0,0,0,1,1,1,1],[]],["Ia body.007_2",[0,0,0,0,0,0,1,1,1,1],[]],["Ia body.007_3",[0,0,0,0,0,0,1,1,1,1],[]],["Ia body.007_4",[0,0,0,0,0,0,1,1,1,1],[]],["Ia body.007_5",[0,0,0,0,0,0,1,1,1,1],[]],["Ia body.007_6",[0,0,0,0,0,0,1,1,1,1],[]],["Ia body.007_7",[0,0,0,0,0,0,1,1,1,1],[]]]]]]';new t.Vector3;const ut=new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),Math.PI/2),pt=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI*.8),gt=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),-Math.PI*.8);new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI);const Y=new t.Vector3;new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Vector3,new t.Quaternion,new t.Quaternion,new t.Matrix4;const G0=r=>{r.matrix.copy(r.matrixWorld),r.parent&&r.matrix.premultiply(new t.Matrix4().copy(r.parent.matrixWorld).invert()),r.matrix.decompose(r.position,r.quaternion,r.scale);for(let e=0;e<r.children.length;e++)G0(r.children[e])},Y0=(r,e)=>{for(let n=0;n<r.length;n++){const i=r[n];if(i.name===e)return i;{const a=Y0(i.children,e);if(a)return a}}return null},mt=(r,e)=>{for(let i=0;i<r.bones.length;i++){const a=r.bones[i];Y0(e.bones,a.name).matrixWorld.copy(a.matrixWorld)}const n=e.bones[0].parent;G0(n),e.calculateInverses()},ft=new t.ConeBufferGeometry(.05,.2,3).applyMatrix4(new t.Matrix4().makeRotationFromQuaternion(new t.Quaternion().setFromUnitVectors(new t.Vector3(0,1,0),new t.Vector3(0,0,1)))),Z0={},wt=r=>{let e=Z0[r];return e||(e=new t.MeshPhongMaterial({color:r,flatShading:!0}),Z0[r]=e),e},L=(r=255)=>{const e=new t.Mesh(ft,wt(r));return e.frustumCulled=!1,e.updateMatrixWorld=()=>{},e},yt=()=>({eyes:L(16711680),head:L(16744576),chest:L(16776960),leftShoulder:L(65280),rightShoulder:L(32768),leftUpperArm:L(65535),rightUpperArm:L(32896),leftLowerArm:L(255),rightLowerArm:L(128),leftHand:L(16777215),rightHand:L(8421504),hips:L(16711680),leftUpperLeg:L(16776960),rightUpperLeg:L(8421376),leftLowerLeg:L(65280),rightLowerLeg:L(32768),leftFoot:L(16777215),rightFoot:L(8421504)}),_t=r=>{const e=[],n=i=>{for(let a=0;a<i.length;a++){const s=i[a];s.children.length===0?e.includes(s)||e.push(s):n(s.children)}};return n(r.bones),e},$0=(r,e)=>{for(;r;r=r.parent)if(e(r))return r;return null},t0=(r,e)=>{let n=null;for(;r;r=r.parent)e(r)&&(n=r);return n},X0=(r,e)=>{for(let n=0;r;r=r.parent,n++)if(r===e)return n;return 1/0},Mt=(r,e)=>{const n=i=>{if(e(i))return i;for(let a=0;a<i.children.length;a++){const s=n(i.children[a]);if(s)return s}return null};return n(r)},P=(r,e)=>{let n=0;for(let i=0;i<r.length;i++)e.test(r[i])&&n++;return n},J0=r=>r.bones.find(e=>/hip/i.test(e.name)),Lt=r=>{const e=r.map(i=>{const a=t0(i,s=>/head/i.test(s.name));return a||null}).filter(i=>i),n=e.length>0?e[0]:null;return n||null},K0=(r,e)=>{const n=e?/l/i:/r/i,i=r.map(s=>{const o=t0(s,l=>/eye/i.test(l.name)&&n.test(l.name.replace(/eye/gi,"")));return o||null}).filter(s=>s).sort((s,o)=>{const l=s.name.replace(/shoulder/gi,""),d=P(l,/l/i)-P(l,/r/i),c=o.name.replace(/shoulder/gi,""),u=P(c,/l/i)-P(c,/r/i);return e?u-d:d-u}),a=i.length>0?i[0]:null;return a||null},xt=(r,e)=>{for(let n=r;n;n=n.parent)if(n.parent===e)return n;return null},ee=(r,e)=>{const n=e?/l/i:/r/i,i=r.map(s=>{const o=$0(s,l=>/shoulder/i.test(l.name)&&n.test(l.name.replace(/shoulder/gi,"")));if(o){const l=X0(s,o);return l>=3?{bone:o,distance:l}:null}else return null}).filter(s=>s).sort((s,o)=>{const l=o.distance-s.distance;if(l!==0)return l;{const d=s.bone.name.replace(/shoulder/gi,""),c=P(d,/l/i)-P(d,/r/i),u=o.bone.name.replace(/shoulder/gi,""),m=P(u,/l/i)-P(u,/r/i);return e?m-c:c-m}}),a=i.length>0?i[0].bone:null;return a||null},te=r=>Mt(r,e=>/hand|wrist/i.test(e.name)),re=(r,e)=>{const n=e?/l/i:/r/i,i=r.map(s=>{const o=t0(s,l=>/foot|ankle/i.test(l.name)&&n.test(l.name.replace(/foot|ankle/gi,"")));if(o){const l=t0(o,d=>/leg|thigh/i.test(d.name)&&n.test(d.name.replace(/leg|thigh/gi,"")));if(l){const d=X0(o,l);return d>=2?{footBone:o,distance:d}:null}else return null}else return null}).filter(s=>s).sort((s,o)=>{const l=o.distance-s.distance;if(l!==0)return l;{const d=s.footBone.name.replace(/foot|ankle/gi,""),c=P(d,/l/i)-P(d,/r/i),u=o.footBone.name.replace(/foot|ankle/gi,""),m=P(u,/l/i)-P(u,/r/i);return e?m-c:c-m}}),a=i.length>0?i[0].footBone:null;return a||null},ie=r=>{for(;;r=r.parent)if(!r.isBone)return r;return null},ne=(r,e,n)=>{const[i,a,s]=r,o=new e;o.name=i,o.position.fromArray(a,0),o.quaternion.fromArray(a,3),o.scale.fromArray(a,3+4);for(let l=0;l<s.length;l++)o.add(ne(s[l],n,n));return o},At=r=>ne(r,t.Object3D,t.Bone),Pt=r=>{const e=At(JSON.parse(r));return new t.Skeleton(e.children)};class oe{constructor(e,n,i={}){const a=(()=>{let h=n;if(h&&!h.isMesh&&(h=h.scene),!h){const w=new t.Scene,y=new t.Object3D;y.isSkinnedMesh=!0,y.skeleton=null,y.bind=function(S){this.skeleton=S},y.bind(Pt(dt)),w.add(y);const T=J0(y.skeleton),V=ie(T);w.add(V),h=w}return h})();this.model=a,this.options=i,a.updateMatrixWorld(!0);const s=[];a.traverse(h=>{h.isSkinnedMesh&&s.push(h)}),s.sort((h,w)=>w.skeleton.bones.length-h.skeleton.bones.length),this.skinnedMeshes=s;const o=s.find(h=>h.skeleton.bones[0].parent)||null,l=o&&o.skeleton,d=l?s.find(h=>h.skeleton!==l&&h.skeleton.bones.length>=l.bones.length):null,c=d&&d.skeleton;if(c&&(mt(c,l),d.bind(l)),i.debug){const h=yt();for(const w in h)this.model.add(h[w]);this.debugMeshes=h}else this.debugMeshes=null;const u=_t(l),m=K0(u,!0),v=K0(u,!1),f=Lt(u),x=f.parent,_=x.parent,R=J0(l),O=xt(_,R),H=ee(u,!0),F=te(H),b=F.parent,r0=b.parent,E=ee(u,!1),W=te(E),C=W.parent,I=C.parent,se=re(u,!0),ae=se.parent,le=ae.parent,he=re(u,!1),ce=he.parent,vt=ce.parent,p={Hips:R,Spine:O,Chest:_,Neck:x,Head:f,Left_shoulder:H,Left_arm:r0,Left_elbow:b,Left_wrist:F,Left_leg:le,Left_knee:ae,Left_ankle:se,Right_shoulder:E,Right_arm:I,Right_elbow:C,Right_wrist:W,Right_leg:vt,Right_knee:ce,Right_ankle:he};this.modelBones=p;const Q=ie(R),Rt=()=>{if(m&&v)return m.getWorldPosition(new t.Vector3).add(v.getWorldPosition(new t.Vector3)).divideScalar(2);{const h=f.getWorldPosition(new t.Vector3).sub(x.getWorldPosition(new t.Vector3));return h.z<0&&(h.z*=-1),f.getWorldPosition(new t.Vector3).add(h)}},B=F.getWorldPosition(new t.Vector3).sub(f.getWorldPosition(new t.Vector3)).x<0,_0=new t.Vector3(0,1,0).applyQuaternion(Q.quaternion).z<-.5,de=new t.Vector3(0,0,-1).applyQuaternion(le.getWorldQuaternion(new t.Quaternion).premultiply(Q.quaternion.clone().invert())).y<.5;this.flipZ=B,this.flipY=_0,this.flipLeg=de;const l0=Q.quaternion.clone(),N=new t.Matrix4().copy(Q.matrixWorld).invert();Q.position.set(0,0,0),Q.quaternion.set(0,0,0,1),Q.scale.set(1,1,1),Q.updateMatrix(),f.traverse(h=>{h.savedPosition=h.position.clone(),h.savedMatrixWorld=h.matrixWorld.clone()});const ue=[],pe=h=>{for(let w=0;w<h.length;w++){const y=h[w];/hair/i.test(y.name)&&ue.push(y),pe(y.children)}};pe(l.bones);const Tt=u.filter(h=>/hair/i.test(h.name)).map(h=>{for(;h;h=h.parent)if(h.parent===f)return h;return null}).filter(h=>h);this.allHairBones=ue,this.hairBones=Tt,this.springBoneManager=null,i.hair&&new Promise((h,w)=>{n||(n={}),n.parser||(n.parser={json:{extensions:{}}}),n.parser.json.extensions||(n.parser.json.extensions={}),n.parser.json.extensions.VRM||(n.parser.json.extensions.VRM={secondaryAnimation:{boneGroups:this.hairBones.map(y=>{const T=[],V=S=>{T.push(this.allHairBones.indexOf(S)),S.children.length>0&&V(S.children[0])};return V(y),{comment:y.name,stiffiness:.5,gravityPower:.2,gravityDir:{x:0,y:-1,z:0},dragForce:.3,center:-1,hitRadius:.02,bones:T,colliderGroups:[]}})}},n.parser.getDependency=async(y,T)=>{if(y==="node")return this.allHairBones[T];throw new Error("unsupported type")}),new Ce().import(n).then(y=>{this.springBoneManager=y})});const k=(h,w)=>{const y=u.filter(V=>h.test(V.name)&&$0(V,S=>S===p.Left_wrist||S===p.Right_wrist)).sort((V,S)=>{const _e=V.name.replace(h,""),Me=P(_e,/l/i)-P(_e,/r/i),Le=S.name.replace(h,""),xe=P(Le,/l/i)-P(Le,/r/i);return w?xe-Me:Me-xe});let T=y.length>0?t0(y[0],V=>h.test(V.name)):null;return T!=null&&T.parent&&(T=T.parent),T},Ft={left:{thumb:k(/thumb/gi,!0),index:k(/index/gi,!0),middle:k(/middle/gi,!0),ring:k(/ring/gi,!0),little:k(/little/gi,!0)||k(/pinky/gi,!0)},right:{thumb:k(/thumb/gi,!1),index:k(/index/gi,!1),middle:k(/middle/gi,!1),ring:k(/ring/gi,!1),little:k(/little/gi,!1)||k(/pinky/gi,!1)}};this.fingerBones=Ft;const Z={},D=h=>{const w=p[h].name;return Z[w]||(Z[w]=new t.Quaternion),Z[w]};_0&&["Hips"].forEach(h=>{D(h).premultiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),-Math.PI/2))}),B&&["Hips"].forEach(h=>{D(h).premultiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI))}),de&&["Left_leg","Right_leg"].forEach(h=>{D(h).premultiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),Math.PI/2))});const bt=B?r0:I,ge=B?b:C,kt=B?F:W,h0=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),-Math.PI/2).premultiply(new t.Quaternion().setFromRotationMatrix(new t.Matrix4().lookAt(new t.Vector3(0,0,0),ge.getWorldPosition(new t.Vector3).applyMatrix4(N).sub(bt.getWorldPosition(new t.Vector3).applyMatrix4(N)).applyQuaternion(l0),new t.Vector3(0,1,0)))),me=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),-Math.PI/2).premultiply(new t.Quaternion().setFromRotationMatrix(new t.Matrix4().lookAt(new t.Vector3(0,0,0),kt.getWorldPosition(new t.Vector3).applyMatrix4(N).sub(ge.getWorldPosition(new t.Vector3).applyMatrix4(N)).applyQuaternion(l0),new t.Vector3(0,1,0)))),Vt=B?I:r0,fe=B?C:b,Wt=B?W:F,c0=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI/2).premultiply(new t.Quaternion().setFromRotationMatrix(new t.Matrix4().lookAt(new t.Vector3(0,0,0),fe.getWorldPosition(new t.Vector3).applyMatrix4(N).sub(Vt.getWorldPosition(new t.Vector3).applyMatrix4(N)).applyQuaternion(l0),new t.Vector3(0,1,0)))),we=new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI/2).premultiply(new t.Quaternion().setFromRotationMatrix(new t.Matrix4().lookAt(new t.Vector3(0,0,0),Wt.getWorldPosition(new t.Vector3).applyMatrix4(N).sub(fe.getWorldPosition(new t.Vector3).applyMatrix4(N)).applyQuaternion(l0),new t.Vector3(0,1,0))));D("Right_arm").multiply(h0.clone().invert()),D("Right_elbow").multiply(h0.clone()).premultiply(me.clone().invert()),D("Left_arm").multiply(c0.clone().invert()),D("Left_elbow").multiply(c0.clone()).premultiply(we.clone().invert()),D("Left_leg").premultiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),-Math.PI/2)),D("Right_leg").premultiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),-Math.PI/2));for(const h in Z)Z[h].invert();Ue(Q.children[0],{preRotations:Z}),a.traverse(h=>{h.isSkinnedMesh&&h.bind(h.skeleton.bones.length===l.bones.length&&h.skeleton.bones.every((w,y)=>w===l.bones[y])?l:h.skeleton)}),_0&&p.Hips.quaternion.premultiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(1,0,0),-Math.PI/2)),B&&p.Hips.quaternion.premultiply(new t.Quaternion().setFromAxisAngle(new t.Vector3(0,1,0),Math.PI)),p.Right_arm.quaternion.premultiply(h0.clone().invert()),p.Right_elbow.quaternion.premultiply(h0).premultiply(me.clone().invert()),p.Left_arm.quaternion.premultiply(c0.clone().invert()),p.Left_elbow.quaternion.premultiply(c0).premultiply(we.clone().invert()),a.updateMatrixWorld(!0),R.traverse(h=>{h.initialQuaternion=h.quaternion.clone()});const St=h=>{const w=new t.Vector3;for(let y=0;y<h.length;y++)w.add(h[y]);return w.divideScalar(h.length),w},ye=Rt();this.poseManager=new Ge(this),this.shoulderTransforms=new at(this),this.legsManager=new lt(this);const A=(h,w=h.parent)=>h.getWorldPosition(new t.Vector3).sub(w.getWorldPosition(new t.Vector3));this.initializeBonePositions({spine:A(p.Spine),chest:A(p.Chest,p.Spine),neck:A(p.Neck),head:A(p.Head),eyes:ye.clone().sub(f.getWorldPosition(new t.Vector3)),leftShoulder:A(p.Right_shoulder),leftUpperArm:A(p.Right_arm),leftLowerArm:A(p.Right_elbow),leftHand:A(p.Right_wrist),rightShoulder:A(p.Left_shoulder),rightUpperArm:A(p.Left_arm),rightLowerArm:A(p.Left_elbow),rightHand:A(p.Left_wrist),leftUpperLeg:A(p.Right_leg),leftLowerLeg:A(p.Right_knee),leftFoot:A(p.Right_ankle),rightUpperLeg:A(p.Left_leg),rightLowerLeg:A(p.Left_knee),rightFoot:A(p.Left_ankle)}),this.height=ye.sub(St([p.Left_ankle.getWorldPosition(new t.Vector3),p.Right_ankle.getWorldPosition(new t.Vector3)])).y,this.shoulderWidth=p.Left_arm.getWorldPosition(new t.Vector3).distanceTo(p.Right_arm.getWorldPosition(new t.Vector3)),this.leftArmLength=this.shoulderTransforms.leftArm.armLength,this.rightArmLength=this.shoulderTransforms.rightArm.armLength,this.inputs={hmd:this.poseManager.vrTransforms.head,leftGamepad:this.poseManager.vrTransforms.rightHand,rightGamepad:this.poseManager.vrTransforms.leftHand},this.inputs.hmd.scaleFactor=1,this.lastModelScaleFactor=1,this.outputs={eyes:this.shoulderTransforms.eyes,head:this.shoulderTransforms.head,hips:this.legsManager.hips,spine:this.shoulderTransforms.spine,chest:this.shoulderTransforms.transform,neck:this.shoulderTransforms.neck,leftShoulder:this.shoulderTransforms.leftShoulderAnchor,leftUpperArm:this.shoulderTransforms.leftArm.upperArm,leftLowerArm:this.shoulderTransforms.leftArm.lowerArm,leftHand:this.shoulderTransforms.leftArm.hand,rightShoulder:this.shoulderTransforms.rightShoulderAnchor,rightUpperArm:this.shoulderTransforms.rightArm.upperArm,rightLowerArm:this.shoulderTransforms.rightArm.lowerArm,rightHand:this.shoulderTransforms.rightArm.hand,leftUpperLeg:this.legsManager.leftLeg.upperLeg,leftLowerLeg:this.legsManager.leftLeg.lowerLeg,leftFoot:this.legsManager.leftLeg.foot,rightUpperLeg:this.legsManager.rightLeg.upperLeg,rightLowerLeg:this.legsManager.rightLeg.lowerLeg,rightFoot:this.legsManager.rightLeg.foot},this.modelBoneOutputs={Hips:this.outputs.hips,Spine:this.outputs.spine,Chest:this.outputs.chest,Neck:this.outputs.neck,Head:this.outputs.head,Left_shoulder:this.outputs.rightShoulder,Left_arm:this.outputs.rightUpperArm,Left_elbow:this.outputs.rightLowerArm,Left_wrist:this.outputs.rightHand,Left_leg:this.outputs.rightUpperLeg,Left_knee:this.outputs.rightLowerLeg,Left_ankle:this.outputs.rightFoot,Right_shoulder:this.outputs.leftShoulder,Right_arm:this.outputs.leftUpperArm,Right_elbow:this.outputs.leftLowerArm,Right_wrist:this.outputs.leftHand,Right_leg:this.outputs.leftUpperLeg,Right_knee:this.outputs.leftLowerLeg,Right_ankle:this.outputs.leftFoot},this.microphoneWorker=null,this.volume=0,this.setMicrophoneMediaStream(i.microphoneMediaStream,{muted:i.muted,microphoneWorkletUrl:i.microphoneWorkletUrl}),this.lastTimestamp=Date.now(),this.shoulderTransforms.Start(),this.legsManager.Start(),this.decapitated=!1,i.decapitate&&this.decapitate()}initializeBonePositions(e){this.shoulderTransforms.spine.position.copy(e.spine),this.shoulderTransforms.transform.position.copy(e.chest),this.shoulderTransforms.neck.position.copy(e.neck),this.shoulderTransforms.head.position.copy(e.head),this.shoulderTransforms.eyes.position.copy(e.eyes),this.shoulderTransforms.leftShoulderAnchor.position.copy(e.leftShoulder),this.shoulderTransforms.leftArm.upperArm.position.copy(e.leftUpperArm),this.shoulderTransforms.leftArm.lowerArm.position.copy(e.leftLowerArm),this.shoulderTransforms.leftArm.hand.position.copy(e.leftHand),this.shoulderTransforms.rightShoulderAnchor.position.copy(e.rightShoulder),this.shoulderTransforms.rightArm.upperArm.position.copy(e.rightUpperArm),this.shoulderTransforms.rightArm.lowerArm.position.copy(e.rightLowerArm),this.shoulderTransforms.rightArm.hand.position.copy(e.rightHand),this.legsManager.leftLeg.upperLeg.position.copy(e.leftUpperLeg),this.legsManager.leftLeg.lowerLeg.position.copy(e.leftLowerLeg),this.legsManager.leftLeg.foot.position.copy(e.leftFoot),this.legsManager.rightLeg.upperLeg.position.copy(e.rightUpperLeg),this.legsManager.rightLeg.lowerLeg.position.copy(e.rightLowerLeg),this.legsManager.rightLeg.foot.position.copy(e.rightFoot),this.shoulderTransforms.hips.updateMatrixWorld()}update(){const e=this.decapitated;this.springBoneManager&&e&&this.undecapitate();const n=this.inputs.hmd.scaleFactor;n!==this.lastModelScaleFactor&&(this.model.scale.set(n,n,n),this.lastModelScaleFactor=n,this.springBoneManager&&this.springBoneManager.springBoneGroupList.forEach(s=>{s.forEach(o=>{o._worldBoneLength=o.bone.localToWorld(Y.copy(o._initialLocalChildPosition)).sub(o._worldPosition).length()})})),this.shoulderTransforms.Update(),this.legsManager.Update();for(const s in this.modelBones){const o=this.modelBones[s],l=this.modelBoneOutputs[s];s==="Hips"&&o.position.copy(l.position),o.quaternion.multiplyQuaternions(l.quaternion,o.initialQuaternion),s==="Left_ankle"||s==="Right_ankle"?o.quaternion.multiply(ut):s==="Left_wrist"?o.quaternion.multiply(pt):s==="Right_wrist"&&o.quaternion.multiply(gt),o.updateMatrixWorld()}const i=Date.now(),a=Math.min(i-this.lastTimestamp,1e3);if(this.lastTimestamp=i,this.options.fingers){const s=o=>{const l=o?this.fingerBones.left:this.fingerBones.right,d=o?this.inputs.leftGamepad:this.inputs.rightGamepad;for(const c in l){const u=l[c];if(u){let m;c==="thumb"?m=(f,x)=>f.setFromAxisAngle(Y.set(0,o?1:-1,0),d.grip*Math.PI*(x===0?.007:.12)):c==="index"?m=(f,x)=>f.setFromAxisAngle(Y.set(0,o?-.5:.55,o?-.6:.6),d.pointer*Math.PI*.3):c==="middle"?m=(f,x)=>f.setFromAxisAngle(Y.set(-.12,o?-.55:.55,o?-.9:.9),d.grip*Math.PI*.35):c==="ring"?m=(f,x)=>f.setFromAxisAngle(Y.set(-.3,o?-.55:.55,o?-.9:.9),d.grip*Math.PI*.35):c==="little"&&(m=(f,x)=>f.setFromAxisAngle(Y.set(-.38,o?-.5:.5,o?-.8:.8),d.grip*Math.PI*.35));let v=0;u.traverse(f=>{m(f.quaternion,v++)})}}};s(!0),s(!1)}if(this.springBoneManager&&this.springBoneManager.lateUpdate(a/1e3),this.springBoneManager&&e&&this.decapitate(),this.options.visemes){const s=Math.min(this.volume*10,1),o=(()=>{const l=i%2e3;return l>=0&&l<100?l/100:l>=100&&l<200?1-(l-100)/100:0})();this.skinnedMeshes.forEach(l=>{const{morphTargetDictionary:d,morphTargetInfluences:c}=l;if(d&&c){const u=/.*_a+(?!\w+)/i,m=Object.keys(d).filter(b=>u.test(b));let v=d[m];v===void 0&&(v=d[26]),v!==void 0&&(c[v]=s);const f=Math.floor(Math.random()*5),x=/.*blink_*l(?:eft)*/i,_=Object.keys(d).filter(b=>x.test(b));let R=d[_];R===void 0&&(R=d[16]),R!==void 0&&parseInt(i/1e3)%10==f&&(c[R]=o);const O=/.*blink_*r(?:ight)*/i,H=Object.keys(d).filter(b=>O.test(b));let F=d[H];F===void 0&&(F=d[17]),F!==void 0&&parseInt(i/1e3)%10==f&&(c[F]=o)}})}if(this.debugMeshes)for(const s in this.debugMeshes){const o=this.debugMeshes[s],l=this.outputs[s];o.matrixWorld.multiplyMatrices(this.model.matrixWorld,l.matrixWorld)}}async setMicrophoneMediaStream(e,n={}){this.microphoneWorker&&(this.microphoneWorker.close(),this.microphoneWorker=null,setTimeout(()=>{this.volume=0})),e&&(this.microphoneWorker=new ct(e,n),this.microphoneWorker.addEventListener("volume",i=>{this.volume=this.volume*.8+i.data*.2}))}decapitate(){this.decapitated||(this.modelBones.Head.traverse(e=>{!e.savedPosition||!e.savedMatrixWorld||(e.savedPosition.copy(e.position),e.savedMatrixWorld.copy(e.matrixWorld),e.position.set(NaN,NaN,NaN),e.matrixWorld.set(NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN,NaN))}),this.debugMeshes&&[this.debugMeshes.eyes,this.debugMeshes.head].forEach(e=>{e.visible=!1}),this.decapitated=!0)}undecapitate(){this.decapitated&&(this.modelBones.Head.traverse(e=>{!e.savedPosition||!e.savedMatrixWorld||(e.position.copy(e.savedPosition),e.matrixWorld.copy(e.savedMatrixWorld))}),this.debugMeshes&&[this.debugMeshes.eyes,this.debugMeshes.head].forEach(e=>{e.visible=!0}),this.decapitated=!1)}setFloorHeight(e){this.poseManager.vrTransforms.floorHeight=e}getFloorHeight(){return this.poseManager.vrTransforms.floorHeight}destroy(){this.setMicrophoneMediaStream(null)}}return window.Avatar=oe,oe});
